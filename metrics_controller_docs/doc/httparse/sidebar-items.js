initSidebarItems({"constant":[["EMPTY_HEADER","An empty header, useful for constructing a `Header` array to pass in for parsing.Example"]],"enum":[["Error","An error in parsing."],["Status","The result of a successful parse pass.`Complete` is used when the buffer contained the complete value. `Partial` is used when parsing did not reach the end of the expected value, but no invalid data was found."]],"fn":[["parse_chunk_size","Parse a buffer of bytes as a chunk size.The return value, if complete and successful, includes the index of the buffer that parsing stopped at, and the size of the following chunk.Example"],["parse_headers","Parse a buffer of bytes as headers.The return value, if complete and successful, includes the index of the buffer that parsing stopped at, and a sliced reference to the parsed headers. The length of the slice will be equal to the number of properly parsed headers.Example"]],"struct":[["Header","Represents a parsed header."],["InvalidChunkSize","An error in parsing a chunk size."],["Request","A parsed Request.The optional values will be `None` if a parse was not complete, and did not parse the associated property. This allows you to inspect the parts that could be parsed, before reading more, in case you wish to exit early.Example"],["Response","A parsed Response.See `Request` docs for explanation of optional values."]],"type":[["Result","A Result of any parsing action.If the input is invalid, an `Error` will be returned. Note that incomplete data is not considered invalid, and so will not return an error, but rather a `Ok(Status::Partial)`."]]});