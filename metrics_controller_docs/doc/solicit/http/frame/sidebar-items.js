initSidebarItems({"fn":[["pack_header","Constructs a buffer of 9 bytes that represents the given `FrameHeader`."],["unpack_header","Deconstructs a `FrameHeader` into its corresponding 4 components, represented as a 4-tuple: `(length, frame_type, flags, stream_id)`.The frame `type` and `flags` components are returned as their original octet representation, rather than reinterpreted."]],"mod":[["data","The module contains the implementation of the `DATA` frame and associated flags."],["headers","The module contains the implementation of the `HEADERS` frame and associated flags."],["settings","The module contains the implementation of the `SETTINGS` frame and associated flags."]],"struct":[["RawFrame","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame as it is read from the wire.This format is defined in section 4.1. of the HTTP/2 spec.The `RawFrame` struct simply stores the raw components of an HTTP/2 frame: its header and the payload as a sequence of bytes.It does not try to interpret the payload bytes, nor do any validation in terms of its validity based on the frame type given in the header. It is simply a wrapper around the two parts of an HTTP/2 frame."]],"trait":[["Flag","A trait that all HTTP/2 frame header flags need to implement."],["Frame","A trait that all HTTP/2 frame structs need to implement."]],"type":[["FrameHeader","An alias for the 4-tuple representing the components of each HTTP/2 frame header."],["FrameHeaderBuffer","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored in."]]});